"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[81900],{23697:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=t(24246),i=t(71670);const o={},r="Function: listContainers()",c={id:"namespaces/containerEngine/functions/listContainers",title:"Function: listContainers()",description:"listContainers(): Promise \\",source:"@site/api/namespaces/containerEngine/functions/listContainers.md",sourceDirName:"namespaces/containerEngine/functions",slug:"/namespaces/containerEngine/functions/listContainers",permalink:"/api/namespaces/containerEngine/functions/listContainers",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"typedocSidebar",previous:{title:"inspectManifest",permalink:"/api/namespaces/containerEngine/functions/inspectManifest"},next:{title:"listImages",permalink:"/api/namespaces/containerEngine/functions/listImages"}},a={},l=[{value:"Returns",id:"returns",level:2},{value:"Source",id:"source",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,i.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"function-listcontainers",children:"Function: listContainers()"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"listContainers"}),"(): ",(0,s.jsx)(e.code,{children:"Promise"})," <",(0,s.jsx)(e.a,{href:"/api/interfaces/ContainerInfo",children:(0,s.jsx)(e.code,{children:"ContainerInfo"})}),"[]>"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Returns the list of containers across all container engines, in any state (running or not)."}),"\n",(0,s.jsx)(e.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"Promise"})," <",(0,s.jsx)(e.a,{href:"/api/interfaces/ContainerInfo",children:(0,s.jsx)(e.code,{children:"ContainerInfo"})}),"[]>"]}),"\n",(0,s.jsxs)(e.p,{children:["A promise resolving to an array of containers information. This method returns a subset of the available information for containers. To get the complete description of a specific container, you can use the ",(0,s.jsx)(e.a,{href:"/api/namespaces/containerEngine/functions/inspectContainer",children:"containerEngine.inspectContainer"})," method."]}),"\n",(0,s.jsx)(e.h2,{id:"source",children:"Source"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://github.com/ecrookshanks/podman-desktop/blob/5777361594d32df0b2fac28d0017c9717ce2bc9e/packages/extension-api/src/extension-api.d.ts#L3310",children:"packages/extension-api/src/extension-api.d.ts:3310"})})]})}function p(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},71670:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>r});var s=t(27378);const i={},o=s.createContext(i);function r(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);